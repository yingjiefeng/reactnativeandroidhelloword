/** ***************************************************************************************************************************************************************************** *  * @author :fengguangjing * @createTime:2017-6-13下午4:00:13 * @version:4.2.4 * @modifyTime: * @modifyAuthor: * @description: ***************************************************************************************************************************************************************************** */package com.open.react.modules;import java.util.HashMap;import java.util.Map;import android.util.Log;import android.widget.Toast;import com.facebook.react.bridge.Callback;import com.facebook.react.bridge.ReactApplicationContext;import com.facebook.react.bridge.ReactContextBaseJavaModule;import com.facebook.react.bridge.ReactMethod;import javax.annotation.Nullable;import com.facebook.react.bridge.Arguments;import com.facebook.react.bridge.WritableMap;import com.facebook.react.bridge.ReactContext;import com.facebook.react.modules.core.DeviceEventManagerModule;/** *****************************************************************************************************************************************************************************  *  * @author :fengguangjing * @createTime:2017-6-13下午4:00:13 * @version:4.2.4 * @modifyTime: * @modifyAuthor: * @description: *****************************************************************************************************************************************************************************  */public class ToastModule extends ReactContextBaseJavaModule {	private static final String DURATION_SHORT_KEY = "SHORT";	private static final String DURATION_LONG_KEY = "LONG";	public ToastModule(ReactApplicationContext reactContext) {		super(reactContext);	}	// 复写方法，返回react-native中调用的 组件名	@Override	public String getName() {		return "ToastNativeAndroid";	}	// 复写方法，返回常量	@Override	public Map<String, Object> getConstants() {		final Map<String, Object> constants = new HashMap<String, Object>();		constants.put(DURATION_SHORT_KEY, Toast.LENGTH_SHORT);		constants.put(DURATION_LONG_KEY, Toast.LENGTH_LONG);		return constants;	}	// 使用 @ReactMethod注解返回react-native中可调用的 方法	@ReactMethod	public void show(String message, int duration) {		Log.d("ToastNativeAndroid", "message==" + message);		Toast.makeText(getReactApplicationContext(), message, duration).show();	}	// 说明下：count，flag是我自定义的变量	@ReactMethod	public void showCallback(String message, int duration, Callback successCallback, Callback errorCallback) {		Toast.makeText(getReactApplicationContext(), message, duration).show();		boolean flag = true;		int count = 1;		// 通过invoke调用，随便你传参		if (flag)			successCallback.invoke("success", ++count);		else			errorCallback.invoke("error", ++count);		flag = !flag;				// 静态方法		WritableMap map = Arguments.createMap();		map.putBoolean("boolean",true);		map.putDouble("double",0.003);		map.putString("string","string");		sendEvent(getReactApplicationContext(), "eventName",map);	}		private void sendEvent(ReactContext reactContext, String eventName, @Nullable WritableMap params){	    reactContext	    .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)	    .emit(eventName, params);	}}