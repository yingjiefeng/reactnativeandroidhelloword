/** ***************************************************************************************************************************************************************************** *  * @author :fengguangjing * @createTime:2017-6-15下午5:23:17 * @version:4.2.4 * @modifyTime: * @modifyAuthor: * @description: ***************************************************************************************************************************************************************************** */package com.open.react.modules;import java.io.IOException;import java.io.InputStream;import java.net.HttpURLConnection;import java.net.URL;import javax.annotation.Nullable;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.widget.ImageView;import com.example.master.helloworld.R;import com.facebook.drawee.backends.pipeline.Fresco;import com.facebook.react.uimanager.SimpleViewManager;import com.facebook.react.uimanager.ThemedReactContext;import com.facebook.react.uimanager.ViewProps;import com.facebook.react.uimanager.annotations.ReactProp;import com.facebook.react.views.image.ReactImageView;/** *****************************************************************************************************************************************************************************  *  * @author :fengguangjing * @createTime:2017-6-15下午5:23:17 * @version:4.2.4 * @modifyTime: * @modifyAuthor: * @description: *****************************************************************************************************************************************************************************  */public class RCTReactImageManager extends SimpleViewManager<ReactImageView> {	public static final String REACT_CLASS = "RCTRCTImageView";	@Override	public String getName() {		return REACT_CLASS;	}	@Override	public ReactImageView createViewInstance(ThemedReactContext context) {		return new ReactImageView(context, Fresco.newDraweeControllerBuilder(), null);	}	// 使用@ReactProp或@ReactPropGroup声明一些在Javascript里可以使用的setter方法	@ReactProp(name = "src")	public void setSrc(final ImageView view, @Nullable final String src) {		new Thread(new Runnable() {			@Override			public void run() {				view.post(new Runnable() {					@Override					public void run() {						try {							view.setImageBitmap(getBitmap(src));						} catch (IOException e) {							// TODO Auto-generated catch block							e.printStackTrace();							view.setImageResource(R.drawable.icon);						}					}				});			}		}).start();	}		 	public  Bitmap getBitmap(String path) throws IOException {		URL url = new URL(path);		HttpURLConnection conn = (HttpURLConnection) url.openConnection();		conn.setConnectTimeout(5000);		conn.setRequestMethod("GET");		if (conn.getResponseCode() == 200) {			InputStream inputStream = conn.getInputStream();			Bitmap bitmap = BitmapFactory.decodeStream(inputStream);			return bitmap;		}		return null;	}	@ReactProp(name = ViewProps.RESIZE_MODE)	public void setResizeMode(ImageView view, @Nullable String resizeMode) {		ImageView.ScaleType scaleType = ImageView.ScaleType.CENTER;		if ("contain".equals(resizeMode)) {			scaleType = ImageView.ScaleType.CENTER_INSIDE;		}		view.setScaleType(scaleType);	}		 @ReactProp(name = "borderRadius", defaultFloat = 0f)	  public void setBorderRadius(ReactImageView view, float borderRadius) {	    view.setBorderRadius(borderRadius);	  }	   }